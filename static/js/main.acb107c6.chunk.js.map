{"version":3,"sources":["components/Navbar.js","components/Form.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","theme","nav_fg","id","to","title","type","name","onChange","colorInput","document","getElementById","changeColor","value","color","htmlFor","Form","showAlert","text","setText","e","target","rows","placeholder","style","backgroundColor","bg","fg","onClick","toUpperCase","toLowerCase","navigator","clipboard","writeText","newText","split","join","trim","filter","t","length","Alert","alert","role","charAt","slice","msg","About","defaultProps","App","useState","nav","setTheme","setColor","setAlert","appendStyle","themeObj","styleElement","createElement","getElementsByTagName","appendChild","createTextNode","changeTheme","colorInp","hexcolor","textColor","replace","parseInt","substr","toggle","exact","path","localStorage","clearTimeout","s","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.acb107c6.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Navbar(props) {\n  // Function to handle color\n  const handleColor = () => {\n    let colorInput = document.getElementById(\"themeColor\");\n    props.changeColor(colorInput.value);\n  };\n\n  return (\n    <nav\n      className={`navbar navbar-expand-lg navbar-${props.theme.nav_fg} bg-${props.theme.nav_fg}`}\n      id=\"navbar\"\n    >\n      <div className=\"container-fluid\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          {props.title}\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/\">\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/about\">\n                About\n              </Link>\n            </li>\n          </ul>\n          <div className=\"form-check form-switch\">\n            <input\n              type=\"color\"\n              id=\"themeColor\"\n              name=\"themeColor\"\n              onChange={handleColor}\n              value={props.color}\n            />\n            <label\n              className=\"form-check-label\"\n              htmlFor=\"flexSwitchCheckDefault\"\n            >\n              Theme\n            </label>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\n// Describing types of props passed from app.js\nNavbar.propTypes = { title: PropTypes.string.isRequired };\n\n// Defining default props if not given\nNavbar.defaultProps = { title: \"Title Here\" };\n","import React from \"react\";\n\nexport default function Form({ theme, showAlert, text, setText, title }) {\n  // Changing title\n  document.title = title;\n\n  // Handling onChnage textarea event\n  const handleChangeText = (e) => setText(e.target.value);\n\n  // Function to change into uppercase\n  const handleUpCase = () => {\n    setText(text.toUpperCase());\n    text === \"\"\n      ? showAlert(\"danger\", \"Enter something to convert\")\n      : showAlert(\"success\", \"Converted to upper case\");\n  };\n\n  // Function to change into lowercase\n  const handleLowCase = () => {\n    setText(text.toLowerCase());\n    text === \"\"\n      ? showAlert(\"danger\", \"Enter something to convert\")\n      : showAlert(\"success\", \"Converted to lower case\");\n  };\n\n  // Function to clear text\n  const handleClearText = () => {\n    setText(\"\");\n    text === \"\"\n      ? showAlert(\"danger\", \"Enter something to clear\")\n      : showAlert(\"success\", \"Text cleared\");\n  };\n\n  // Function to copy text\n  const handleCopyText = () => {\n    navigator.clipboard.writeText(text);\n    text === \"\"\n      ? showAlert(\"danger\", \"Enter something to copy\")\n      : showAlert(\"success\", \"Text copied\");\n  };\n\n  // Function to remove extra-spaces\n  const handleExtraSpaces = () => {\n    let newText = text.split(/[ ]+/).join(\" \").trim();\n    newText === text\n      ? showAlert(\"danger\", \"No white spaces\")\n      : showAlert(\"success\", \"White space removed\");\n    setText(newText);\n  };\n\n  return (\n    <div className=\"container my-3\">\n      <div className=\"mb-3\">\n        <label htmlFor=\"myText\" className=\"form-label\">\n          Enter Text here\n        </label>\n        <textarea\n          value={text}\n          onChange={handleChangeText}\n          className=\"form-control\"\n          id=\"myText\"\n          rows=\"10\"\n          placeholder=\"Enter here\"\n          style={{ backgroundColor: theme.bg, color: theme.fg }}\n        ></textarea>\n      </div>\n      <button onClick={handleUpCase} className=\"m-2 btn btn-outline-primary\">\n        Upper Case\n      </button>\n      <button onClick={handleLowCase} className=\"m-2 btn btn-outline-primary\">\n        Lower Case\n      </button>\n      <button onClick={handleClearText} className=\"m-2 btn btn-outline-primary\">\n        Clear Text\n      </button>\n      <button onClick={handleCopyText} className=\"m-2 btn btn-outline-primary\">\n        Copy Text\n      </button>\n      <button\n        onClick={handleExtraSpaces}\n        className=\"m-2 btn btn-outline-primary\"\n      >\n        Remove White-spaces\n      </button>\n      <div className=\"mb-3\">\n        <h2>Summary</h2>\n        <hr />\n        <p>\n          {`${text.split(\" \").filter((t) => t !== \"\").length} words & ${\n            text.length\n          } letters`}\n        </p>\n        <p>{`${text.length / 10} seconds required to read`}</p>\n      </div>\n      <div className=\"mb-3\">\n        <h2>Preview</h2>\n        <hr />\n        <p>{text === \"\" ? \"Preview will appear here\" : text}</p>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Alert(props) {\n  return (\n    props.alert && (\n      <div\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\n        role=\"alert\"\n      >\n        <strong>\n          {props.alert.type.charAt(0).toUpperCase() + props.alert.type.slice(1)}\n        </strong>\n        {\": \"} {props.alert.msg}\n      </div>\n    )\n  );\n}\n","import React from \"react\";\n\nexport default function About({ title }) {\n  // Changing title\n  document.title = title;\n\n  return (\n    <div className=\"container my-3\">\n      <h1>About</h1>\n      <hr />\n      <p>This is a simple textutils website made in react.</p>\n      <p>This webstie is made by saksham.</p>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Form from \"./components/Form\";\nimport Alert from \"./components/Alert\";\nimport About from \"./components/About\";\n\nfunction App() {\n  // Theme states\n  const [theme, setTheme] = useState({\n    nav: \"#eef3f3\",\n    nav_fg: \"light\",\n    bg: \"#ffffff\",\n    fg: \"black\",\n  });\n\n  // Color state\n  const [color, setColor] = useState(theme.bg);\n\n  // Alert states\n  const [alert, setAlert] = useState(null);\n\n  // Text states\n  const [text, setText] = useState(\"\");\n\n  // Function to show alerts\n  const showAlert = (type, msg) => {\n    setAlert({ type: type, msg: msg });\n    if (localStorage[\"timeout\"] != null) clearTimeout(localStorage[\"timeout\"]);\n    let s = setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n    localStorage[\"timeout\"] = s;\n  };\n\n  // Function to append style\n  const appendStyle = (themeObj) => {\n    var styleElement = document.getElementById(\"styles_js\");\n    if (!styleElement) {\n      styleElement = document.createElement(\"style\");\n      styleElement.type = \"text/css\";\n      styleElement.id = \"styles_js\";\n      document.getElementsByTagName(\"head\")[0].appendChild(styleElement);\n    }\n    styleElement.appendChild(\n      document.createTextNode(\n        `body {background-color: ${themeObj.bg} !important;}`\n      )\n    );\n    styleElement.appendChild(\n      document.createTextNode(`body {color: ${themeObj.fg} !important;}`)\n    );\n    styleElement.appendChild(\n      document.createTextNode(\n        `#navbar {background-color: ${themeObj.nav} !important;}`\n      )\n    );\n    styleElement.appendChild(\n      document.createTextNode(\n        `.btn {color: ${themeObj.fg} !important; border: 1px solid ${themeObj.fg} !important;}`\n      )\n    );\n    styleElement.appendChild(\n      document.createTextNode(\n        `.btn:hover {background-color: ${themeObj.nav} !important; border: 1px solid ${themeObj.nav} !important;}`\n      )\n    );\n  };\n  appendStyle(theme);\n\n  // Function to check darkness of background\n  function checkDark(hexcolor) {\n    hexcolor = hexcolor.replace(\"#\", \"\");\n    var r = parseInt(hexcolor.substr(0, 2), 16);\n    var g = parseInt(hexcolor.substr(2, 2), 16);\n    var b = parseInt(hexcolor.substr(4, 2), 16);\n    var brightness = (r * 299 + g * 587 + b * 114) / 1000;\n    return brightness >= 128 ? \"black\" : \"white\";\n  }\n\n  // Function to change theme\n  const changeTheme = (colorInp) => {\n    let textColor = checkDark(colorInp);\n\n    let themeObj = {\n      nav: colorInp,\n      nav_fg: textColor === \"white\" ? \"dark\" : \"light\",\n      bg: colorInp + \"e0\",\n      fg: textColor,\n    };\n\n    setTheme(themeObj);\n    appendStyle(themeObj);\n  };\n\n  // Function to change color\n  const changeColor = (colorInp) => {\n    setColor(colorInp);\n    changeTheme(colorInp);\n  };\n\n  return (\n    <Router>\n      <Navbar\n        title=\"TextUtils\"\n        theme={theme}\n        toggle={changeTheme}\n        color={color}\n        changeColor={changeColor}\n      />\n      <Alert alert={alert} />\n      <Switch>\n        <Route exact path=\"/about\">\n          <About title=\"About\" />\n        </Route>\n        <Route exact path=\"/\">\n          <Form\n            title=\"TextUtils\"\n            theme={theme}\n            showAlert={showAlert}\n            text={text}\n            setText={setText}\n          />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}